{"ast":null,"code":"import axios from \"axios\";\nimport { ADMIN_NEWFEED_FAIL, ADMIN_NEWFEED_REQUEST, ADMIN_NEWFEED_SUCCESS, ALL_NEWFEED_FAIL, ALL_NEWFEED_REQUEST, ALL_NEWFEED_SUCCESS, CLEAR_ERRORS, DELETE_NEWFEED_FAIL, DELETE_NEWFEED_REQUEST, DELETE_NEWFEED_SUCCESS, NEWFEED_DETAILS_FAIL, NEWFEED_DETAILS_REQUEST, NEWFEED_DETAILS_SUCCESS, NEW_NEWFEED_FAIL, NEW_NEWFEED_REQUEST, NEW_NEWFEED_SUCCESS, UPDATE_NEWFEED_FAIL, UPDATE_NEWFEED_REQUEST, UPDATE_NEWFEED_SUCCESS } from \"../constants/newFeedConstants\";\n// Get All NEWFEEDs\nexport const getNewFeed = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let currentPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let category = arguments.length > 2 ? arguments[2] : undefined;\n  let tag = arguments.length > 3 ? arguments[3] : undefined;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ALL_NEWFEED_REQUEST\n      });\n      let link = `/api/v1/newFeeds?keyword=${keyword}&page=${currentPage}`;\n      if (category) {\n        link = `/api/v1/newFeeds?keyword=${keyword}&page=${currentPage}&category=${category}&tag=${tag}`;\n      }\n      if (tag) {\n        link = `/api/v1/newFeeds?keyword=${keyword}&page=${currentPage}&category=${category}&tag=${tag}`;\n      }\n      const {\n        data\n      } = await axios.get(link);\n      dispatch({\n        type: ALL_NEWFEED_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_NEWFEED_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  };\n};\n\n// Get All NEWFEEDs For Admin\nexport const getAdminNewFeed = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_NEWFEED_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/admin/newFeeds\");\n    console.log(data);\n    dispatch({\n      type: ADMIN_NEWFEED_SUCCESS,\n      payload: data.newFeeds\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_NEWFEED_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Create NEWFEED\nexport const createNewFeed = newFeedData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_NEWFEED_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/admin/newFeed/new`, newFeedData, config);\n    dispatch({\n      type: NEW_NEWFEED_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_NEWFEED_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Update NEWFEED\nexport const updateNewFeed = (id, newFeedData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_NEWFEED_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/newFeed/${id}`, newFeedData, config);\n    dispatch({\n      type: UPDATE_NEWFEED_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_NEWFEED_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Delete newFeed\nexport const deleteNewFeed = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_NEWFEED_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/newFeed/${id}`);\n    dispatch({\n      type: DELETE_NEWFEED_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_NEWFEED_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get NEWFEEDs Details\nexport const getNewFeedDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: NEWFEED_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/newFeed/${id}`);\n    dispatch({\n      type: NEWFEED_DETAILS_SUCCESS,\n      payload: data.newFeed\n    });\n  } catch (error) {\n    dispatch({\n      type: NEWFEED_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ADMIN_NEWFEED_FAIL","ADMIN_NEWFEED_REQUEST","ADMIN_NEWFEED_SUCCESS","ALL_NEWFEED_FAIL","ALL_NEWFEED_REQUEST","ALL_NEWFEED_SUCCESS","CLEAR_ERRORS","DELETE_NEWFEED_FAIL","DELETE_NEWFEED_REQUEST","DELETE_NEWFEED_SUCCESS","NEWFEED_DETAILS_FAIL","NEWFEED_DETAILS_REQUEST","NEWFEED_DETAILS_SUCCESS","NEW_NEWFEED_FAIL","NEW_NEWFEED_REQUEST","NEW_NEWFEED_SUCCESS","UPDATE_NEWFEED_FAIL","UPDATE_NEWFEED_REQUEST","UPDATE_NEWFEED_SUCCESS","getNewFeed","keyword","currentPage","category","tag","dispatch","type","link","data","get","payload","error","response","message","getAdminNewFeed","console","log","newFeeds","createNewFeed","newFeedData","config","headers","post","updateNewFeed","id","put","success","deleteNewFeed","delete","getNewFeedDetails","newFeed","clearErrors"],"sources":["/Users/tao/DEPLOY/booking-home/src/actions/newFeedAction.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  ADMIN_NEWFEED_FAIL,\n  ADMIN_NEWFEED_REQUEST,\n  ADMIN_NEWFEED_SUCCESS,\n  ALL_NEWFEED_FAIL,\n  ALL_NEWFEED_REQUEST,\n  ALL_NEWFEED_SUCCESS,\n  CLEAR_ERRORS,\n  DELETE_NEWFEED_FAIL,\n  DELETE_NEWFEED_REQUEST,\n  DELETE_NEWFEED_SUCCESS,\n  NEWFEED_DETAILS_FAIL,\n  NEWFEED_DETAILS_REQUEST,\n  NEWFEED_DETAILS_SUCCESS,\n  NEW_NEWFEED_FAIL,\n  NEW_NEWFEED_REQUEST,\n  NEW_NEWFEED_SUCCESS,\n  UPDATE_NEWFEED_FAIL,\n  UPDATE_NEWFEED_REQUEST,\n  UPDATE_NEWFEED_SUCCESS,\n} from \"../constants/newFeedConstants\";\n// Get All NEWFEEDs\nexport const getNewFeed =\n  (keyword = \"\", currentPage = 1, category, tag) =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: ALL_NEWFEED_REQUEST });\n\n      let link = `/api/v1/newFeeds?keyword=${keyword}&page=${currentPage}`;\n\n      if (category) {\n        link = `/api/v1/newFeeds?keyword=${keyword}&page=${currentPage}&category=${category}&tag=${tag}`;\n      }\n      if (tag) {\n        link = `/api/v1/newFeeds?keyword=${keyword}&page=${currentPage}&category=${category}&tag=${tag}`;\n      }\n\n      const { data } = await axios.get(link);\n\n      dispatch({\n        type: ALL_NEWFEED_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_NEWFEED_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\n// Get All NEWFEEDs For Admin\nexport const getAdminNewFeed = () => async (dispatch) => {\n  try {\n    dispatch({ type: ADMIN_NEWFEED_REQUEST });\n\n    const { data } = await axios.get(\"/api/v1/admin/newFeeds\");\n    console.log(data);\n    dispatch({\n      type: ADMIN_NEWFEED_SUCCESS,\n      payload: data.newFeeds,\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_NEWFEED_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Create NEWFEED\nexport const createNewFeed = (newFeedData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_NEWFEED_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    const { data } = await axios.post(\n      `/api/v1/admin/newFeed/new`,\n      newFeedData,\n      config\n    );\n\n    dispatch({\n      type: NEW_NEWFEED_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_NEWFEED_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update NEWFEED\nexport const updateNewFeed = (id, newFeedData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_NEWFEED_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    const { data } = await axios.put(\n      `/api/v1/admin/newFeed/${id}`,\n      newFeedData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_NEWFEED_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_NEWFEED_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete newFeed\nexport const deleteNewFeed = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_NEWFEED_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/newFeed/${id}`);\n\n    dispatch({\n      type: DELETE_NEWFEED_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_NEWFEED_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get NEWFEEDs Details\nexport const getNewFeedDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: NEWFEED_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/newFeed/${id}`);\n\n    dispatch({\n      type: NEWFEED_DETAILS_SUCCESS,\n      payload: data.newFeed,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEWFEED_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}