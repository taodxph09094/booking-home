{"ast":null,"code":"var _jsxFileName = \"/Users/tao/DEPLOY/booking-home/src/layout/AuthLayout/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = _ref => {\n  _s();\n  let {\n    isAdmin,\n    component: Component,\n    ...rest\n  } = _ref;\n  const {\n    loading,\n    isAuthenticated,\n    user\n  } = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading === false && /*#__PURE__*/_jsxDEV(Route, {\n      ...rest,\n      render: props => {\n        if (isAuthenticated === false) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 22\n          }, this);\n        }\n        if (isAdmin === true && user.role !== \"admin\") {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 22\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(Component, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(ProtectedRoute, \"Is/VqZ4xfCyoEtbtOvAKpoVUv3g=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Fragment","useSelector","Redirect","Route","ProtectedRoute","isAdmin","component","Component","rest","loading","isAuthenticated","user","state","props","role"],"sources":["/Users/tao/DEPLOY/booking-home/src/layout/AuthLayout/ProtectedRoute.jsx"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n  const { loading, isAuthenticated, user } = useSelector((state) => state.user);\n  return (\n    <Fragment>\n      {loading === false && (\n        <Route\n          {...rest}\n          render={(props) => {\n            if (isAuthenticated === false) {\n              return <Redirect to=\"/login\" />;\n            }\n\n            if (isAdmin === true && user.role !== \"admin\") {\n              return <Redirect to=\"/login\" />;\n            }\n\n            return <Component {...props} />;\n          }}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAAC;AAEnD,MAAMC,cAAc,GAAG,QAAgD;EAAA;EAAA,IAA/C;IAAEC,OAAO;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC;EAChE,MAAM;IAAEC,OAAO;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EAC7E,oBACE,QAAC,QAAQ;IAAA,UACNF,OAAO,KAAK,KAAK,iBAChB,QAAC,KAAK;MAAA,GACAD,IAAI;MACR,MAAM,EAAGK,KAAK,IAAK;QACjB,IAAIH,eAAe,KAAK,KAAK,EAAE;UAC7B,oBAAO,QAAC,QAAQ;YAAC,EAAE,EAAC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAG;QACjC;QAEA,IAAIL,OAAO,KAAK,IAAI,IAAIM,IAAI,CAACG,IAAI,KAAK,OAAO,EAAE;UAC7C,oBAAO,QAAC,QAAQ;YAAC,EAAE,EAAC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAG;QACjC;QAEA,oBAAO,QAAC,SAAS;UAAA,GAAKD;QAAK;UAAA;UAAA;UAAA;QAAA,QAAI;MACjC;IAAE;MAAA;MAAA;MAAA;IAAA;EAEL;IAAA;IAAA;IAAA;EAAA,QACQ;AAEf,CAAC;AAAC,GAtBIT,cAAc;EAAA,QACyBH,WAAW;AAAA;AAAA,KADlDG,cAAc;AAwBpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}