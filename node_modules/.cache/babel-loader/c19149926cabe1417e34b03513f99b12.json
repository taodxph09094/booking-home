{"ast":null,"code":"import axios from \"axios\";\nimport { ADMIN_BANNER_FAIL, ADMIN_BANNER_REQUEST, ADMIN_BANNER_SUCCESS, ALL_BANNER_FAIL, ALL_BANNER_REQUEST, ALL_BANNER_SUCCESS, CLEAR_ERRORS, DELETE_BANNER_FAIL, DELETE_BANNER_REQUEST, DELETE_BANNER_SUCCESS, BANNER_DETAILS_FAIL, BANNER_DETAILS_REQUEST, BANNER_DETAILS_SUCCESS, NEW_BANNER_FAIL, NEW_BANNER_REQUEST, NEW_BANNER_SUCCESS, UPDATE_BANNER_FAIL, UPDATE_BANNER_REQUEST, UPDATE_BANNER_SUCCESS } from \"../constants/bannerConstants\";\n// Get All banners\nexport const getBanner = function () {\n  let currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ALL_BANNER_REQUEST\n      });\n      let link = `/api/v1/banners?page=${currentPage}`;\n      const {\n        data\n      } = await axios.get(link);\n      dispatch({\n        type: ALL_BANNER_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_BANNER_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  };\n};\n\n// Get All Banners For Admin\nexport const getAdminBanner = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_BANNER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/admin/banners\");\n    console.log(data);\n    dispatch({\n      type: ADMIN_BANNER_SUCCESS,\n      payload: data.banners\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_BANNER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Create Banner\nexport const createBanner = bannerData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_BANNER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/admin/banner/create`, bannerData, config);\n    dispatch({\n      type: NEW_BANNER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_BANNER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Update Banner\nexport const updateBanner = (id, bannerData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_BANNER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/banner/${id}`, bannerData, config);\n    dispatch({\n      type: UPDATE_BANNER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_BANNER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Delete Banner\nexport const deleteBanner = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_BANNER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/banner/${id}`);\n    dispatch({\n      type: DELETE_BANNER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_BANNER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get Banners Details\nexport const getBannerDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: BANNER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/banner/${id}`);\n    dispatch({\n      type: BANNER_DETAILS_SUCCESS,\n      payload: data.banner\n    });\n  } catch (error) {\n    dispatch({\n      type: BANNER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ADMIN_BANNER_FAIL","ADMIN_BANNER_REQUEST","ADMIN_BANNER_SUCCESS","ALL_BANNER_FAIL","ALL_BANNER_REQUEST","ALL_BANNER_SUCCESS","CLEAR_ERRORS","DELETE_BANNER_FAIL","DELETE_BANNER_REQUEST","DELETE_BANNER_SUCCESS","BANNER_DETAILS_FAIL","BANNER_DETAILS_REQUEST","BANNER_DETAILS_SUCCESS","NEW_BANNER_FAIL","NEW_BANNER_REQUEST","NEW_BANNER_SUCCESS","UPDATE_BANNER_FAIL","UPDATE_BANNER_REQUEST","UPDATE_BANNER_SUCCESS","getBanner","currentPage","dispatch","type","link","data","get","payload","error","response","message","getAdminBanner","console","log","banners","createBanner","bannerData","config","headers","post","updateBanner","id","put","success","deleteBanner","delete","getBannerDetails","banner","clearErrors"],"sources":["/Users/tao/DEPLOY/booking-home/src/actions/bannerAction.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  ADMIN_BANNER_FAIL,\n  ADMIN_BANNER_REQUEST,\n  ADMIN_BANNER_SUCCESS,\n  ALL_BANNER_FAIL,\n  ALL_BANNER_REQUEST,\n  ALL_BANNER_SUCCESS,\n  CLEAR_ERRORS,\n  DELETE_BANNER_FAIL,\n  DELETE_BANNER_REQUEST,\n  DELETE_BANNER_SUCCESS,\n  BANNER_DETAILS_FAIL,\n  BANNER_DETAILS_REQUEST,\n  BANNER_DETAILS_SUCCESS,\n  NEW_BANNER_FAIL,\n  NEW_BANNER_REQUEST,\n  NEW_BANNER_SUCCESS,\n  UPDATE_BANNER_FAIL,\n  UPDATE_BANNER_REQUEST,\n  UPDATE_BANNER_SUCCESS,\n} from \"../constants/bannerConstants\";\n// Get All banners\nexport const getBanner =\n  (currentPage = 1) =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: ALL_BANNER_REQUEST });\n\n      let link = `/api/v1/banners?page=${currentPage}`;\n\n      const { data } = await axios.get(link);\n\n      dispatch({\n        type: ALL_BANNER_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_BANNER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\n// Get All Banners For Admin\nexport const getAdminBanner = () => async (dispatch) => {\n  try {\n    dispatch({ type: ADMIN_BANNER_REQUEST });\n\n    const { data } = await axios.get(\"/api/v1/admin/banners\");\n    console.log(data);\n    dispatch({\n      type: ADMIN_BANNER_SUCCESS,\n      payload: data.banners,\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_BANNER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Create Banner\nexport const createBanner = (bannerData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_BANNER_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    const { data } = await axios.post(\n      `/api/v1/admin/banner/create`,\n      bannerData,\n      config\n    );\n\n    dispatch({\n      type: NEW_BANNER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_BANNER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Banner\nexport const updateBanner = (id, bannerData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_BANNER_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    const { data } = await axios.put(\n      `/api/v1/admin/banner/${id}`,\n      bannerData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_BANNER_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_BANNER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete Banner\nexport const deleteBanner = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_BANNER_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/banner/${id}`);\n\n    dispatch({\n      type: DELETE_BANNER_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_BANNER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get Banners Details\nexport const getBannerDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: BANNER_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/banner/${id}`);\n\n    dispatch({\n      type: BANNER_DETAILS_SUCCESS,\n      payload: data.banner,\n    });\n  } catch (error) {\n    dispatch({\n      type: BANNER_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}