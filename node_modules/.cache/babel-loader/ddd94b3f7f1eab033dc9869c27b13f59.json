{"ast":null,"code":"import PropTypes from \"prop-types\";\nconst formatDate = dateIn => {\n  var _dateIn;\n  // ISODate ~ 2021-3-31\n  if (!dateIn) {\n    return {\n      dayToday: \"loading...\",\n      dateShort: \"loading...\",\n      dateFull: \"loading...\",\n      dDMmYy: \"loading...\"\n    };\n  }\n  if (((_dateIn = dateIn) === null || _dateIn === void 0 ? void 0 : _dateIn.indexOf(\"/\")) !== -1) {\n    var _dateIn2;\n    // if input 31/3/2021 > output 2021-3-31\n    const arr = (_dateIn2 = dateIn) === null || _dateIn2 === void 0 ? void 0 : _dateIn2.split(\"/\");\n    dateIn = `${arr[2]}-${arr[1]}-${arr[0]}`;\n  }\n  const dateObj = new Date(dateIn);\n  const dayNumber = dateObj.getDay(); // trả về thứ dưới dạng một số từ 0 > 6\n  const dateNowFormat = new Date().toString().slice(0, 10);\n  const dateObjFormat = dateObj.toString().slice(0, 10);\n  let dayToday = \"\";\n  if (dayNumber === 0) {\n    dayToday = \"Chủ nhật\";\n  }\n  if (dayNumber === 1) {\n    dayToday = \"Thứ hai\";\n  }\n  if (dayNumber === 2) {\n    dayToday = \"Thứ ba\";\n  }\n  if (dayNumber === 3) {\n    dayToday = \"Thứ tư\";\n  }\n  if (dayNumber === 4) {\n    dayToday = \"Thứ năm\";\n  }\n  if (dayNumber === 5) {\n    dayToday = \"Thứ sáu\";\n  }\n  if (dayNumber === 6) {\n    dayToday = \"Thứ bảy\";\n  }\n  if (dateNowFormat === dateObjFormat) {\n    dayToday = \"Hôm nay\";\n  }\n  const date = `0${dateObj.getDate()}`.slice(-2);\n  const month = `0${dateObj.getMonth() + 1}`.slice(-2);\n  const year = dateObj.getFullYear();\n  const dateFull = dayToday + \", \" + date + \" tháng \" + month + \", \" + year;\n  const getTime = dateObj.getTime();\n  return {\n    dayToday,\n    dateShort: dateIn,\n    dateFull,\n    YyMmDd: `${year}.${month}.${date}`,\n    getTime\n  };\n};\nexport default formatDate;\nformatDate.propTypes = {\n  ISODate: PropTypes.string.isRequired\n};","map":{"version":3,"names":["PropTypes","formatDate","dateIn","dayToday","dateShort","dateFull","dDMmYy","indexOf","arr","split","dateObj","Date","dayNumber","getDay","dateNowFormat","toString","slice","dateObjFormat","date","getDate","month","getMonth","year","getFullYear","getTime","YyMmDd","propTypes","ISODate","string","isRequired"],"sources":["/Users/tao/DEPLOY/booking-home/src/utils/dateOfWeek.js"],"sourcesContent":["import PropTypes from \"prop-types\";\n\nconst formatDate = (dateIn) => {\n  // ISODate ~ 2021-3-31\n  if (!dateIn) {\n    return {\n      dayToday: \"loading...\",\n      dateShort: \"loading...\",\n      dateFull: \"loading...\",\n      dDMmYy: \"loading...\",\n    };\n  }\n  if (dateIn?.indexOf(\"/\") !== -1) {\n    // if input 31/3/2021 > output 2021-3-31\n    const arr = dateIn?.split(\"/\");\n    dateIn = `${arr[2]}-${arr[1]}-${arr[0]}`;\n  }\n  const dateObj = new Date(dateIn);\n  const dayNumber = dateObj.getDay(); // trả về thứ dưới dạng một số từ 0 > 6\n  const dateNowFormat = new Date().toString().slice(0, 10);\n  const dateObjFormat = dateObj.toString().slice(0, 10);\n\n  let dayToday = \"\";\n  if (dayNumber === 0) {\n    dayToday = \"Chủ nhật\";\n  }\n  if (dayNumber === 1) {\n    dayToday = \"Thứ hai\";\n  }\n  if (dayNumber === 2) {\n    dayToday = \"Thứ ba\";\n  }\n  if (dayNumber === 3) {\n    dayToday = \"Thứ tư\";\n  }\n  if (dayNumber === 4) {\n    dayToday = \"Thứ năm\";\n  }\n  if (dayNumber === 5) {\n    dayToday = \"Thứ sáu\";\n  }\n  if (dayNumber === 6) {\n    dayToday = \"Thứ bảy\";\n  }\n  if (dateNowFormat === dateObjFormat) {\n    dayToday = \"Hôm nay\";\n  }\n\n  const date = `0${dateObj.getDate()}`.slice(-2);\n\n  const month = `0${dateObj.getMonth() + 1}`.slice(-2);\n\n  const year = dateObj.getFullYear();\n\n  const dateFull = dayToday + \", \" + date + \" tháng \" + month + \", \" + year;\n\n  const getTime = dateObj.getTime();\n\n  return {\n    dayToday,\n    dateShort: dateIn,\n    dateFull,\n    YyMmDd: `${year}.${month}.${date}`,\n    getTime,\n  };\n};\n\nexport default formatDate;\nformatDate.propTypes = {\n  ISODate: PropTypes.string.isRequired,\n};\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAElC,MAAMC,UAAU,GAAIC,MAAM,IAAK;EAAA;EAC7B;EACA,IAAI,CAACA,MAAM,EAAE;IACX,OAAO;MACLC,QAAQ,EAAE,YAAY;MACtBC,SAAS,EAAE,YAAY;MACvBC,QAAQ,EAAE,YAAY;MACtBC,MAAM,EAAE;IACV,CAAC;EACH;EACA,IAAI,YAAAJ,MAAM,4CAAN,QAAQK,OAAO,CAAC,GAAG,CAAC,MAAK,CAAC,CAAC,EAAE;IAAA;IAC/B;IACA,MAAMC,GAAG,eAAGN,MAAM,6CAAN,SAAQO,KAAK,CAAC,GAAG,CAAC;IAC9BP,MAAM,GAAI,GAAEM,GAAG,CAAC,CAAC,CAAE,IAAGA,GAAG,CAAC,CAAC,CAAE,IAAGA,GAAG,CAAC,CAAC,CAAE,EAAC;EAC1C;EACA,MAAME,OAAO,GAAG,IAAIC,IAAI,CAACT,MAAM,CAAC;EAChC,MAAMU,SAAS,GAAGF,OAAO,CAACG,MAAM,EAAE,CAAC,CAAC;EACpC,MAAMC,aAAa,GAAG,IAAIH,IAAI,EAAE,CAACI,QAAQ,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACxD,MAAMC,aAAa,GAAGP,OAAO,CAACK,QAAQ,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAErD,IAAIb,QAAQ,GAAG,EAAE;EACjB,IAAIS,SAAS,KAAK,CAAC,EAAE;IACnBT,QAAQ,GAAG,UAAU;EACvB;EACA,IAAIS,SAAS,KAAK,CAAC,EAAE;IACnBT,QAAQ,GAAG,SAAS;EACtB;EACA,IAAIS,SAAS,KAAK,CAAC,EAAE;IACnBT,QAAQ,GAAG,QAAQ;EACrB;EACA,IAAIS,SAAS,KAAK,CAAC,EAAE;IACnBT,QAAQ,GAAG,QAAQ;EACrB;EACA,IAAIS,SAAS,KAAK,CAAC,EAAE;IACnBT,QAAQ,GAAG,SAAS;EACtB;EACA,IAAIS,SAAS,KAAK,CAAC,EAAE;IACnBT,QAAQ,GAAG,SAAS;EACtB;EACA,IAAIS,SAAS,KAAK,CAAC,EAAE;IACnBT,QAAQ,GAAG,SAAS;EACtB;EACA,IAAIW,aAAa,KAAKG,aAAa,EAAE;IACnCd,QAAQ,GAAG,SAAS;EACtB;EAEA,MAAMe,IAAI,GAAI,IAAGR,OAAO,CAACS,OAAO,EAAG,EAAC,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAMI,KAAK,GAAI,IAAGV,OAAO,CAACW,QAAQ,EAAE,GAAG,CAAE,EAAC,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC;EAEpD,MAAMM,IAAI,GAAGZ,OAAO,CAACa,WAAW,EAAE;EAElC,MAAMlB,QAAQ,GAAGF,QAAQ,GAAG,IAAI,GAAGe,IAAI,GAAG,SAAS,GAAGE,KAAK,GAAG,IAAI,GAAGE,IAAI;EAEzE,MAAME,OAAO,GAAGd,OAAO,CAACc,OAAO,EAAE;EAEjC,OAAO;IACLrB,QAAQ;IACRC,SAAS,EAAEF,MAAM;IACjBG,QAAQ;IACRoB,MAAM,EAAG,GAAEH,IAAK,IAAGF,KAAM,IAAGF,IAAK,EAAC;IAClCM;EACF,CAAC;AACH,CAAC;AAED,eAAevB,UAAU;AACzBA,UAAU,CAACyB,SAAS,GAAG;EACrBC,OAAO,EAAE3B,SAAS,CAAC4B,MAAM,CAACC;AAC5B,CAAC"},"metadata":{},"sourceType":"module"}